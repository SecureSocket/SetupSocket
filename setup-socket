#!/bin/bash

# Source the progress bar script
source /usr/local/bin/progress-bar.sh

# Enable trapping to clean up properly if the user presses Ctrl+C
enable_trapping

# Create empty progress bar
setup_scroll_area

# Script version
version="v1.0"

# Change directory to /home/secure
cd /home/secure

# Function to display the help information
display_help() {
    echo "Usage: setup-socket [OPTION]"
    echo "A command used for setup SocketOS."
    echo ""
    echo "Options:"
    echo "  --help, -h          display this help and exit"
    echo "  --version, -v       output version information and exit"
    echo "  --install, -i       Install all repositories and dependencies"
    echo "  --update, -u        Update all repositories and dependencies"
    echo
}

# Function to display the version information
display_version() {
    echo "setup-socket $version"
}

# Function to update all repositories and dependencies
update_tools() {
    # Read the list of repos from a file
    repos=($(cat /usr/local/bin/repo_name))
    num_repos=${#repos[@]}
    max_value=100

    # Loop through the list of repos
    for ((i=0; i<num_repos; i++)); do
        # Check if the repo directory is a git repository
        if [ -d "${repos[$i]}/.git" ]; then
            # If it is, update the repo
            echo "Updating ${repos[$i]}"
            cd "${repos[$i]}"
            (git pull  > /dev/null 2>&1)
            cd ..
            draw_progress_bar $((i * max_value / num_repos)) $max_value
        fi
    done
    echo "All repositories and dependencies are up-to-date"
}

# Function to install all repositories and dependencies
install_tools() {
    # read repo list from file
    repos=($(cat /usr/local/bin/repo_list))
    repos1=($(cat /usr/local/bin/repo_name))
    num_repos=${#repos[@]}
    max_value=100

    for ((i=0; i<num_repos; i++)); do
        # check if the repo directory exists
        if [ ! -d "${repos[$i]}" ]; then
            # if it doesn't exist, clone the repo
            echo "Installing ${repos1[$i]}"
            (git clone --depth 1 "${repos[$i]}"  > /dev/null 2>&1)
            draw_progress_bar $((i * max_value / num_repos)) $max_value
        fi
    done
}

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    display_help
elif [ "$1" == "--version" ] || [ "$1" == "-v" ]; then
    display_version
elif [ "$1" == "--update" ] || [ "$1" == "-u" ]; then
    update_tools
elif [ "$1" == "--install" ] || [ "$1" == "-i" ]; then
    install_tools
else
    display_help
fi

# Remove progress bar
destroy_scroll_area